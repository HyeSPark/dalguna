{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport ShortButton from './components/ShortButton';\nimport LongButton from './components/LongButton';\nimport CartButton from './components/CartButton.js';\nimport RestTitleBox from './components/RestTitleBox.js';\nimport RestTab from './components/RestTab.js';\nimport MenuListItem from './components/MenuListItem';\nimport { BrowserRouter as Route, Routes } from 'react-router-dom';\nimport { Main, CatFilter } from './pages';\nimport dhspic from './img/DHS_photo.jpeg';\n\nfunction App() {\n  // restInfo contains all information about the all restaurant with JSON Type\n  // restRoom array will be changing actively\n  // [NOT DECIDED] 통으로 전달 or 따로따로 전달?\n  // [SOLVED] scroll!!!\n  // [NOT SOLVED] 음식 카테고리 영어로 할거면 너무 길어서 못생기고 5개를 한 페이지에 넣기 좀 그럼...\n  // .. 한국어로 바꾸면 행복할것같기도\n  const [cartItem, setCartItem] = useState({\n    restName: \"대학생 치킨\",\n    items: [\"몬스터 오븐 구이\"]\n  });\n  const [menuItemInfo, setMenuItemInfo] = useState([{\n    name: \"냉모밀+돈까스만 (+보통소스,매운소스 선택)\",\n    detail: \"면요리(선택)+돈까스단품(선택)\",\n    price: 13500,\n    img: dhspic\n  } // {name: \"돈까스정식+냉모밀 세트\",\n  //   detail: \"돈까스(선택) + 소스2종 + 냉모밀 (미니냉모밀,빵잼은 제공하지 않아용)\",\n  //   price: \"₩16,000\",\n  //   img: dhspic,} \n  ]); // mapping the list\n\n  const menuList = menuItemInfo.map(menu => /*#__PURE__*/React.createElement(\"li\", {\n    key: menu.name,\n    style: {\n      listStyle: 'none'\n    },\n    className: \"mainPage__menu-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(MenuListItem, {\n    menuItemInfo: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }\n  })))); // cart visible\n\n  const isVisible = false;\n  const objVisible = {\n    true: \"\",\n    false: \"hide\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/App.js"],"names":["React","useState","ShortButton","LongButton","CartButton","RestTitleBox","RestTab","MenuListItem","BrowserRouter","Route","Routes","Main","CatFilter","dhspic","App","cartItem","setCartItem","restName","items","menuItemInfo","setMenuItemInfo","name","detail","price","img","menuList","map","menu","listStyle","isVisible","objVisible","true","false"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,aAAa,IAAIC,KAA1B,EAAiCC,MAAjC,QAA+C,kBAA/C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,SAAhC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AAEA;AACA;AACA;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IACFf,QAAQ,CAAC;AAACgB,IAAAA,QAAQ,EAAC,QAAV;AAAoBC,IAAAA,KAAK,EAAC,CAAC,WAAD;AAA1B,GAAD,CADZ;AAGA,QAAM,CAACC,YAAD,EAAeC,eAAf,IACFnB,QAAQ,CAAC,CAAC;AACVoB,IAAAA,IAAI,EAAE,0BADI;AAEVC,IAAAA,MAAM,EAAE,mBAFE;AAGVC,IAAAA,KAAK,EAAE,KAHG;AAIVC,IAAAA,GAAG,EAAEX;AAJK,GAAD,CAMX;AACA;AACA;AACA;AATW,GAAD,CADZ,CAba,CA4Bb;;AAGA,QAAMY,QAAQ,GAAGN,YAAY,CAACO,GAAb,CAAkBC,IAAD,iBAChC;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACN,IAAd;AAAoB,IAAA,KAAK,EAAE;AAACO,MAAAA,SAAS,EAAC;AAAX,KAA3B;AAA+C,IAAA,SAAS,EAAG,qBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAa,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAED,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CADF,CADe,CAAjB,CA/Ba,CAsCb;;AACA,QAAME,SAAS,GAAG,KAAlB;AACA,QAAMC,UAAU,GACd;AAACC,IAAAA,IAAI,EAAE,EAAP;AACEC,IAAAA,KAAK,EAAE;AADT,GADF;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD;;AAED,eAAelB,GAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\n\nimport ShortButton from './components/ShortButton';\nimport LongButton from './components/LongButton';\nimport CartButton from './components/CartButton.js'\nimport RestTitleBox from './components/RestTitleBox.js'\nimport RestTab from './components/RestTab.js'\nimport MenuListItem from './components/MenuListItem';\nimport { BrowserRouter as Route, Routes } from 'react-router-dom';\nimport { Main, CatFilter } from './pages';\n\nimport dhspic from './img/DHS_photo.jpeg';\n\n\nfunction App() {\n  // restInfo contains all information about the all restaurant with JSON Type\n  // restRoom array will be changing actively\n  // [NOT DECIDED] 통으로 전달 or 따로따로 전달?\n\n  // [SOLVED] scroll!!!\n  // [NOT SOLVED] 음식 카테고리 영어로 할거면 너무 길어서 못생기고 5개를 한 페이지에 넣기 좀 그럼...\n  // .. 한국어로 바꾸면 행복할것같기도\n  \n  \n  const [cartItem, setCartItem] \n    = useState({restName:\"대학생 치킨\", items:[\"몬스터 오븐 구이\"]})\n\n  const [menuItemInfo, setMenuItemInfo]\n    = useState([{\n      name: \"냉모밀+돈까스만 (+보통소스,매운소스 선택)\", \n      detail: \"면요리(선택)+돈까스단품(선택)\",\n      price: 13500,\n      img: dhspic\n    },\n    // {name: \"돈까스정식+냉모밀 세트\",\n    //   detail: \"돈까스(선택) + 소스2종 + 냉모밀 (미니냉모밀,빵잼은 제공하지 않아용)\",\n    //   price: \"₩16,000\",\n    //   img: dhspic,} \n    ])\n  \n\n  \n  // mapping the list\n  \n\n  const menuList = menuItemInfo.map((menu) => \n    <li key={menu.name} style={{listStyle:'none'}} className = \"mainPage__menu-item\">\n      <a href=\"#\"> <MenuListItem menuItemInfo={menu}></MenuListItem></a>\n    </li>\n  )\n\n  \n  // cart visible\n  const isVisible = false;\n  const objVisible \n  = {true: \"\",\n      false: \"hide\"}\n  \n  return (\n    <div className=\"App\">      \n      {/* <Routes>\n        <Route exact path=\"/\" element={<Main />} />\n        <Route exact path=\"/filter\" element={<CatFilter />} />\n      </Routes> */}\n      \n      {/* <RestTitleBox restName=\"대학생 치킨\" restRating=\"5.0 (100)\"></RestTitleBox>\n      <div className={objVisible[isVisible]}>\n        <CartButton cartItem={cartItem}></CartButton>\n      </div> */}\n      {/* <CatFilter restInfo={restInfo} curSelect={\"Chicken\"} catNameList={catNameList}/> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}