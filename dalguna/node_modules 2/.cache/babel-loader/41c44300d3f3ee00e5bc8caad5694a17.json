{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CgClose } from 'react-icons/cg';\nimport CartMenuItem from \"./CartMenuItem\";\nimport RoomCard from \"./RoomCard\";\nimport LongButton from \"./LongButton\";\nimport { useParams } from \"react-router-dom\";\nimport NewRoomModal from \"./NewRoomModal\";\nimport \"../cart_modal.css\";\n\nfunction CartModal(props) {\n  const params = useParams();\n  const {\n    restName,\n    menuList,\n    setMenuList,\n    setModal,\n    roomList,\n    roomLength,\n    isCreateAvailable,\n    deliAddr\n  } = props;\n  const createButtonClassName = {\n    true: \"\",\n    false: \"cartModal__createHide\"\n  };\n  const [menuVisible, setMenuVisible] = useState(menuList.map((menu, i) => /*#__PURE__*/React.createElement(CartMenuItem, {\n    key: i,\n    menuDetail: menu,\n    setMenuDetail: setMenuList,\n    menuList: menuList,\n    menuId: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })));\n  useEffect(updateCartMenu, [menuList]);\n\n  function goBack() {\n    setModal( /*#__PURE__*/React.createElement(React.Fragment, null));\n  }\n\n  function updateCartMenu() {\n    console.log(params.userId, menuList);\n    var copied = [...menuList];\n    setMenuVisible(copied.filter(el => el.qnty !== 0).map((menu, i) => /*#__PURE__*/React.createElement(CartMenuItem, {\n      key: i,\n      menuDetail: menu,\n      setMenuDetail: setMenuList,\n      menuList: menuList,\n      menuId: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  const [newRoomModal, setNewRoomModal] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n\n  function openNewRoomModal() {\n    setNewRoomModal( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-modal-container\",\n      onClick: closeNewRoomModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NewRoomModal, {\n      restName: restName,\n      menuList: menuList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 90\n      }\n    })));\n  }\n\n  const closeNewRoomModal = e => {\n    var contactHeight = e.clientY;\n    var windowHeight = window.innerHeight;\n\n    if (windowHeight - contactHeight > 255) {\n      setNewRoomModal( /*#__PURE__*/React.createElement(React.Fragment, null));\n    } // \n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__\",\n    style: {\n      backgroundColor: \"white\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goBack,\n    className: \"CartModal__bar-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CgClose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 75\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"CartModal__bar-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }, \"Delivery to \"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 47\n    }\n  }, deliAddr)), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"CartModal__address-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__restmenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, restName), menuVisible, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"CartModal__restmenu-add\",\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"+ Add More Menu\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Rooms Available\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 0\n    },\n    className: \"CartModal__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, roomLength !== 0 ? roomList : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 52\n    }\n  }, \" \\uD604\\uC7AC \\uAC00\\uB2A5\\uD55C \\uBC29\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `CartModal__create-room ${createButtonClassName[isCreateAvailable]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"grey\",\n      fontSize: \"0.9rem\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Didn\\u2019t find a room suitable for you?\"), /*#__PURE__*/React.createElement(LongButton, {\n    onClick: openNewRoomModal,\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Create your own room\")), newRoomModal);\n}\n\nexport default CartModal;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartModal.js"],"names":["React","useState","useEffect","CgClose","CartMenuItem","RoomCard","LongButton","useParams","NewRoomModal","CartModal","props","params","restName","menuList","setMenuList","setModal","roomList","roomLength","isCreateAvailable","deliAddr","createButtonClassName","true","false","menuVisible","setMenuVisible","map","menu","i","updateCartMenu","goBack","console","log","userId","copied","filter","el","qnty","newRoomModal","setNewRoomModal","openNewRoomModal","closeNewRoomModal","e","contactHeight","clientY","windowHeight","window","innerHeight","backgroundColor","height","fontWeight","padding","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { CgClose } from 'react-icons/cg';\nimport CartMenuItem from \"./CartMenuItem\";\nimport RoomCard from \"./RoomCard\";\nimport LongButton from \"./LongButton\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport NewRoomModal from \"./NewRoomModal\"\n\nimport \"../cart_modal.css\"\n\nfunction CartModal(props) {\n    const params = useParams()\n    \n    const { restName, menuList, setMenuList, setModal, roomList, roomLength, isCreateAvailable, deliAddr } = props\n    const createButtonClassName = { true: \"\" ,\n            false: \"cartModal__createHide\" }\n\n    const [menuVisible, setMenuVisible] \n        = useState(menuList.map((menu, i) => \n            <CartMenuItem key={i} menuDetail={menu} setMenuDetail={setMenuList} menuList={menuList} menuId={i}/>))\n    \n    useEffect(updateCartMenu, [menuList]) \n    function goBack() {\n        setModal(<></>)\n    }\n    function updateCartMenu() {\n        console.log(params.userId, menuList)\n        var copied = [...menuList]\n           \n        setMenuVisible(copied.filter((el)=> el.qnty !== 0)\n            .map((menu, i) =>\n                <CartMenuItem key={i} menuDetail={menu} setMenuDetail={setMenuList} menuList={menuList} menuId={i}/>))\n    }\n\n    const [newRoomModal, setNewRoomModal] = useState(<></>)\n\n    function openNewRoomModal() {\n        setNewRoomModal(<div className=\"new-modal-container\" onClick={closeNewRoomModal}><NewRoomModal restName={restName} menuList={menuList}/></div>)\n    }\n\n    const closeNewRoomModal = (e) => {\n        var contactHeight = e.clientY;\n        var windowHeight = window.innerHeight;\n        if (windowHeight - contactHeight > 255) {\n            setNewRoomModal(<></>)\n        }\n        \n        // \n    }\n\n    return (\n        <div className=\"CartModal__\" style={{backgroundColor:\"white\", height:\"100%\"}}>\n            <div className=\"CartModal__bar\">\n                <button onClick={goBack} className=\"CartModal__bar-close\"><CgClose></CgClose></button>\n                <span className=\"CartModal__bar-cart\">Cart</span>\n            </div>\n            <div className=\"CartModal__address\">\n                <div><span>Delivery to </span><span style={{fontWeight:\"bold\"}}>{deliAddr}</span></div>\n                <a href=\"#\" className=\"CartModal__address-edit\">Edit</a>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            <div className=\"CartModal__restmenu\">\n                <div className=\"CartModal__title\">{restName}</div>\n                { menuVisible }\n                <button className=\"CartModal__restmenu-add\" onClick={goBack}>+ Add More Menu</button>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            {/* <div className=\"CartModal__request\">\n            </div>\n            <div className = \"mainPage__separation\"/> */}\n            <div className =\"CartModal__room\">\n                <div className=\"CartModal__title\">\n                    Rooms Available\n                </div>\n                <ul style={{padding:0}} className = \"CartModal__room-list\">\n                    {roomLength !== 0 ? roomList : <p style={{color:\"grey\"}}> 현재 가능한 방이 없습니다. </p> }\n                </ul>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            <div className={`CartModal__create-room ${createButtonClassName[isCreateAvailable]}`}>\n                <span style={{color:\"grey\", fontSize:\"0.9rem\", fontWeight:\"bold\"}}>Didn’t find a room suitable for you?</span>\n                <LongButton onClick={openNewRoomModal} type=\"primary\">Create your own room</LongButton>\n            </div>\n            {newRoomModal}\n        </div>\n    )\n}\n\nexport default CartModal;"]},"metadata":{},"sourceType":"module"}