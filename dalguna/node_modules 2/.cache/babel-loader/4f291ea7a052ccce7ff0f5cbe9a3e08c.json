{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/RestaurantPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport RestTitleBox from '../components/RestTitleBox.js';\nimport dhspic from '../img/DHS_photo.jpeg';\nimport MenuListItem from '../components/MenuListItem';\nimport RestTab from '../components/RestTab.js';\nimport TabBar from '../components/TabBar.js';\nimport CartButton from '../components/CartButton.js';\nimport MenuModal from '../components/MenuModal.js';\nimport CartModal from '../components/CartModal.js';\nimport RoomCard from '../components/RoomCard.js';\nimport staticDB from \"../db/static.json\";\nimport { collection, onSnapshot, getDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport '../rest-page.css';\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nfunction RestaurantPage() {\n  const params = useParams();\n  const {\n    userId,\n    restId\n  } = params;\n  const navigate = useNavigate(); // const arrRestName = [\"대학생 치킨\", \"베리신주쿠\", \"마쯔미\"];\n\n  const [isUserJoiningFromRoomCard, setIsUserJoiningFromRoomCard] = useState(false);\n  const [classNameRestPage, setClassNameRestPage] = useState(\"restPage\");\n  const [deliAddr, setDeliAddr] = useState(\"\");\n  const [restInfo, setRestInfo] = useState(staticDB[params.restId]);\n  const [menuItemInfo, setMenuItemInfo] = useState(restInfo.menu);\n  const [modal, setModal] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n\n  function openMenuModal(menu) {\n    setModal( /*#__PURE__*/React.createElement(MenuModal, {\n      menuInfo: menu,\n      restName: restInfo.name,\n      setModal: setModal,\n      cartItem: cartItem,\n      setCartItem: setCartItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }\n    }));\n  }\n\n  function handleCartItemUpdate() {\n    if (document.getElementsByClassName(\"restPage\")[0].previousSibling !== null && document.getElementsByClassName(\"restPage\")[0].previousSibling.className === \"CartModal__\") {\n      setModal( /*#__PURE__*/React.createElement(CartModal, {\n        restName: restInfo.name,\n        menuList: cartItem,\n        setMenuList: setCartItem,\n        setModal: setModal,\n        roomList: roomList,\n        roomLength: roomInfo.length,\n        isCreateAvailable: !isUserJoiningFromRoomCard,\n        deliAddr: deliAddr,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }\n      }));\n    }\n  }\n\n  const [cartItem, setCartItem] = useState([]);\n  useEffect(handleCartItemUpdate, [cartItem]);\n\n  function openCartModal() {\n    setModal( /*#__PURE__*/React.createElement(CartModal, {\n      restName: restInfo.name,\n      menuList: cartItem,\n      setMenuList: setCartItem,\n      setModal: setModal,\n      roomList: roomList,\n      roomLength: roomInfo.length,\n      isCreateAvailable: !isUserJoiningFromRoomCard,\n      deliAddr: deliAddr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }));\n  }\n\n  const menuList = menuItemInfo.map(menu => /*#__PURE__*/React.createElement(\"li\", {\n    key: menu.id,\n    style: {\n      listStyle: 'none'\n    },\n    className: \"mainPage__menu-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => openMenuModal(menu),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(MenuListItem, {\n    menuItemInfo: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }))));\n  const info = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restPage__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"restPage__info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, restInfo.info), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restPage__info-opening\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Open at \", restInfo.open), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Close at \", restInfo.close)));\n  const [roomInfo, setRoomInfo] = useState([]);\n\n  function getRooms() {\n    getDoc(doc(db, \"users\", userId)).then(user => {\n      setDeliAddr(user.data().addr);\n\n      if (user.data().curRoomId !== \"\") {\n        setIsUserJoiningFromRoomCard(true);\n        getDoc(doc(db, \"rooms\", user.data().curRoomId)).then(room => {\n          const {\n            restName,\n            deliInfo,\n            ordStat,\n            parti,\n            endTime\n          } = room.data();\n          setRoomInfo([{\n            'roomId': user.data().curRoomId,\n            'restName': restName,\n            'deliInfo': deliInfo,\n            'ordStat': ordStat,\n            'parti': parti,\n            'endTime': endTime,\n            'timeLeft': parseInt((endTime.seconds - new Date().getTime() / 1000) / 60),\n            'rest': restInfo,\n            'poolMon': parti.reduce((money, menu) => money + menu.price, 0)\n          }]);\n        });\n      } else {\n        onSnapshot(collection(db, \"rooms\"), snapshot => {\n          const tmp = [];\n          snapshot.forEach(doc => tmp.push(doc.data()));\n          setRoomInfo(tmp.map(room => ({\n            'roomId': room.id,\n            'restName': room.restName,\n            'deliInfo': room.deliInfo,\n            'ordStat': room.ordStat,\n            'parti': room.parti,\n            'endTime': room.endTime,\n            'timeLeft': parseInt((room.endTime.seconds - new Date().getTime() / 1000) / 60),\n            'rest': restInfo,\n            'poolMon': room.parti.reduce((money, menu) => money + menu.price, 0)\n          })));\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []); // for (const room of roomInfo) {\n  //     room['rest'] = restInfo;\n  // }\n\n  const [roomList, setRoomList] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  useEffect(() => {\n    console.log(roomInfo);\n    setRoomList(roomInfo.filter(room => room.restName == restInfo.name).map((room, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      style: {\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RoomCard, {\n      roomInfo: room,\n      photo: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    })))));\n  }, [roomInfo]);\n  const [curTab, setCurTab] = useState(\"menu\");\n  const curTabContent = {\n    \"menu\": menuList,\n    \"info\": info,\n    \"room\": roomList\n  };\n\n  function goBack() {\n    if (cartItem.length != 0) {\n      if (window.confirm(\"카트가 비워집니다. 뒤로 가시겠습니까?\")) {\n        navigate(-1);\n      }\n    } else {\n      navigate(-1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, modal, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNameRestPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rest-title-image\",\n    style: {\n      backgroundImage: `url(${restInfo.photo})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rest-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"rest-title-back\",\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(RestTitleBox, {\n    restName: restInfo.name,\n    restRating: \"5.0 (100)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(RestTab, {\n    curTab: curTab,\n    setCurTab: setCurTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"restPage__content-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, curTabContent[curTab]), /*#__PURE__*/React.createElement(CartButton, {\n    cartItem: cartItem,\n    onClick: openCartModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default RestaurantPage;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/RestaurantPage.js"],"names":["React","useState","useEffect","useParams","useNavigate","RestTitleBox","dhspic","MenuListItem","RestTab","TabBar","CartButton","MenuModal","CartModal","RoomCard","staticDB","collection","onSnapshot","getDoc","doc","db","AiOutlineArrowLeft","RestaurantPage","params","userId","restId","navigate","isUserJoiningFromRoomCard","setIsUserJoiningFromRoomCard","classNameRestPage","setClassNameRestPage","deliAddr","setDeliAddr","restInfo","setRestInfo","menuItemInfo","setMenuItemInfo","menu","modal","setModal","openMenuModal","name","cartItem","setCartItem","handleCartItemUpdate","document","getElementsByClassName","previousSibling","className","roomList","roomInfo","length","openCartModal","menuList","map","id","listStyle","info","open","close","setRoomInfo","getRooms","then","user","data","addr","curRoomId","room","restName","deliInfo","ordStat","parti","endTime","parseInt","seconds","Date","getTime","reduce","money","price","snapshot","tmp","forEach","push","setRoomList","console","log","filter","i","curTab","setCurTab","curTabContent","goBack","window","confirm","backgroundImage","photo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'\n\nimport RestTitleBox from '../components/RestTitleBox.js'\n\nimport dhspic from '../img/DHS_photo.jpeg';\nimport MenuListItem from '../components/MenuListItem';\nimport RestTab from '../components/RestTab.js';\nimport TabBar from '../components/TabBar.js';\nimport CartButton from '../components/CartButton.js';\nimport MenuModal from '../components/MenuModal.js';\nimport CartModal from '../components/CartModal.js';\nimport RoomCard from '../components/RoomCard.js';\n\nimport staticDB from \"../db/static.json\";\nimport { collection, onSnapshot, getDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport '../rest-page.css'\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nfunction RestaurantPage() {\n  const params = useParams();\n  const { userId, restId } = params;\n  const navigate = useNavigate();\n  // const arrRestName = [\"대학생 치킨\", \"베리신주쿠\", \"마쯔미\"];\n\n  const [isUserJoiningFromRoomCard, setIsUserJoiningFromRoomCard] = useState(false);\n  const [classNameRestPage, setClassNameRestPage] = useState(\"restPage\");\n  const [deliAddr, setDeliAddr] = useState(\"\");\n\n  const [restInfo, setRestInfo] = useState(staticDB[params.restId])\n  const [menuItemInfo, setMenuItemInfo] = useState(restInfo.menu)\n  \n  const [modal, setModal] = useState(<></>)\n\n  function openMenuModal(menu) {\n    setModal(<MenuModal menuInfo={menu} restName={restInfo.name} setModal={setModal} cartItem={cartItem} setCartItem={setCartItem} ></MenuModal>)\n  }\n  \n  function handleCartItemUpdate() {\n    if (document.getElementsByClassName(\"restPage\")[0].previousSibling !== null \n      && document.getElementsByClassName(\"restPage\")[0].previousSibling.className === \"CartModal__\") {\n      setModal(<CartModal restName={restInfo.name} menuList={cartItem} setMenuList={setCartItem} setModal={setModal} \n            roomList={roomList} roomLength={roomInfo.length} \n            isCreateAvailable={!isUserJoiningFromRoomCard} deliAddr={deliAddr}></CartModal>)\n    }\n      \n  }\n  \n  const [cartItem, setCartItem] \n    = useState([])\n  useEffect(handleCartItemUpdate, [cartItem])\n  \n  function openCartModal() {\n    setModal(<CartModal restName={restInfo.name} menuList={cartItem} setMenuList={setCartItem} setModal={setModal} \n          roomList={roomList} roomLength={roomInfo.length} \n          isCreateAvailable={!isUserJoiningFromRoomCard} deliAddr={deliAddr}></CartModal>)\n  }\n\n  const menuList = menuItemInfo.map((menu) => \n  <li key={menu.id} style={{listStyle:'none'}} className = \"mainPage__menu-item\">\n    <a onClick={() => openMenuModal(menu)}> <MenuListItem menuItemInfo={menu}></MenuListItem></a>\n  </li>\n  )\n\n  const info = \n    <div className = \"restPage__info\">\n      <p className = \"restPage__info-text\">{restInfo.info}</p>\n      <div className = \"restPage__info-opening\">\n        <p>Open at {restInfo.open}</p>\n        <p>Close at {restInfo.close}</p>\n      </div>\n    </div>\n  \n\n  const [roomInfo, setRoomInfo] = useState([]);\n\n  function getRooms() {\n    getDoc(doc(db, \"users\", userId)).then((user) => {\n      setDeliAddr(user.data().addr)\n\n      if (user.data().curRoomId !== \"\") {\n        setIsUserJoiningFromRoomCard(true)\n        getDoc(doc(db, \"rooms\", user.data().curRoomId)).then((room) => {\n          const { restName, deliInfo, ordStat, parti, endTime } = room.data();\n          setRoomInfo([{\n            'roomId': user.data().curRoomId, 'restName': restName,\n            'deliInfo': deliInfo, 'ordStat': ordStat,\n            'parti': parti, 'endTime': endTime,\n            'timeLeft': parseInt((endTime.seconds - new Date().getTime() / 1000) / 60),\n            'rest': restInfo,\n            'poolMon': parti.reduce((money, menu) => money + menu.price, 0) \n          }])\n        })\n      } else {\n        onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n          const tmp = [];\n          snapshot.forEach((doc) => tmp.push(doc.data()))\n          setRoomInfo(tmp.map((room) => ({\n            'roomId': room.id, 'restName': room.restName,\n            'deliInfo': room.deliInfo, 'ordStat': room.ordStat,\n            'parti': room.parti, 'endTime': room.endTime,\n            'timeLeft': parseInt((room.endTime.seconds - new Date().getTime() / 1000) / 60),\n            'rest': restInfo,\n            'poolMon': room.parti.reduce((money, menu) => money + menu.price, 0) \n          })));\n        })\n      }\n    })\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  // for (const room of roomInfo) {\n  //     room['rest'] = restInfo;\n  // }\n\n  const [roomList, setRoomList] = useState(<></>)\n  useEffect(() => {\n      console.log(roomInfo)\n      setRoomList(roomInfo.filter((room) => room.restName==restInfo.name)\n      .map((room, i) => \n      <li key={i} style={{listStyle:'none'}}>\n          <div> <RoomCard roomInfo={room} photo={true}></RoomCard></div>\n      </li>))\n  }, [roomInfo]);\n  \n\n  const [curTab, setCurTab] = useState(\"menu\");\n  const curTabContent = {\n    \"menu\": menuList,\n    \"info\": info,\n    \"room\": roomList\n  }\n\n  function goBack() {\n    if (cartItem.length != 0) {\n      if (window.confirm(\"카트가 비워집니다. 뒤로 가시겠습니까?\")) {\n        navigate(-1)\n      }\n    } else {\n      navigate(-1)\n    }\n  }\n\n\n    return (\n        <div className=\"ui-container\">\n          {modal}\n          <div className={classNameRestPage}>\n            {/* <TabBar/> */}\n            \n            <div className=\"rest-title-image\" style={{backgroundImage: `url(${restInfo.photo})`}}>\n              <div className=\"rest-title\">\n                <button className=\"rest-title-back\" onClick={goBack}>\n                    <AiOutlineArrowLeft /> \n                </button>\n                <div></div>\n              </div>\n                \n                <RestTitleBox restName={restInfo.name} restRating=\"5.0 (100)\"></RestTitleBox>   \n            </div>\n            <RestTab curTab = {curTab} setCurTab = {setCurTab}/>\n            <ul className=\"restPage__content-list\">\n              {curTabContent[curTab]}\n            </ul>\n            <CartButton cartItem={cartItem} onClick={openCartModal}/>\n          </div>\n        </div>\n    )\n    }\n\n\nexport default RestaurantPage\n"]},"metadata":{},"sourceType":"module"}