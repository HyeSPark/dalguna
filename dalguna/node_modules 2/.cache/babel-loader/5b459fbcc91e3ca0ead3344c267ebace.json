{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartMenuItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CgClose } from 'react-icons/cg';\n\nfunction CartMenuItem(props) {\n  const {\n    menuDetail,\n    setMenuDetail,\n    menuList,\n    menuId\n  } = props;\n  const [menuQnty, setMenuQnty] = useState(menuDetail.qnty);\n\n  function incQnty() {\n    setMenuQnty(menuQnty + 1);\n  }\n\n  function decQnty() {\n    if (menuQnty > 1) {\n      setMenuQnty(menuQnty - 1);\n    }\n  }\n\n  function remove() {\n    if (window.confirm(\"Want to remove?\")) {\n      var copiedDetail = [...menuList];\n      const len = copiedDetail.length;\n      copiedDetail = copiedDetail.slice(0, menuId).concat(copiedDetail.slice(menuId + 1, len));\n      setMenuDetail(copiedDetail); // setMenuQnty(0)\n    }\n  }\n\n  function updateMenuDetail() {\n    var copiedDetail = [...menuList];\n    const len = copiedDetail.length;\n    copiedDetail[menuId].qnty = menuQnty;\n\n    if (copiedDetail[menuId].qnty === 0) {//    var newCopiedDetail = copiedDetail.slice(0, menuId) + copiedDetail.slice(menuId+1, len) \n    }\n\n    console.log(menuId, len, copiedDetail); // console.log(copiedDetail);\n\n    setMenuDetail(copiedDetail);\n  }\n\n  useEffect(updateMenuDetail, [menuQnty]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartMenuItem__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartMenuItem__detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, menuDetail.name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, menuDetail.detail.map((el, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 56\n    }\n  }, el, \", \"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, new Intl.NumberFormat('ko-KR', {\n    style: 'currency',\n    currency: 'KRW'\n  }).format(menuDetail.price))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartMenuItem__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CgClose, {\n    style: {\n      color: \"grey\",\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartMenuItem__amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"CartMenuItem__amount-button\",\n    onClick: decQnty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"CartMenuItem__amount-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, menuQnty), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"CartMenuItem__amount-button\",\n    onClick: incQnty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"+\"))));\n}\n\nexport default CartMenuItem;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartMenuItem.js"],"names":["React","useEffect","useState","CgClose","CartMenuItem","props","menuDetail","setMenuDetail","menuList","menuId","menuQnty","setMenuQnty","qnty","incQnty","decQnty","remove","window","confirm","copiedDetail","len","length","slice","concat","updateMenuDetail","console","log","name","detail","map","el","i","Intl","NumberFormat","style","currency","format","price","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CgClose } from 'react-icons/cg';\n\nfunction CartMenuItem(props) {\n    const { menuDetail, setMenuDetail, menuList, menuId } = props;\n\n    const [menuQnty, setMenuQnty] = useState(menuDetail.qnty);\n\n    function incQnty() {\n        setMenuQnty(menuQnty + 1);\n    }\n    function decQnty() {\n        if (menuQnty > 1) {\n            setMenuQnty(menuQnty - 1)\n        }\n    }\n    function remove() {\n        if (window.confirm(\"Want to remove?\")) {\n            var copiedDetail = [...menuList]\n            const len = copiedDetail.length\n            copiedDetail = copiedDetail.slice(0, menuId).concat( copiedDetail.slice(menuId+1, len) )\n            setMenuDetail(copiedDetail)\n            // setMenuQnty(0)\n        }\n    }\n    function updateMenuDetail() {\n\n        var copiedDetail = [...menuList]\n        const len = copiedDetail.length\n        copiedDetail[menuId].qnty = menuQnty;\n        \n        if (copiedDetail[menuId].qnty === 0) {\n        //    var newCopiedDetail = copiedDetail.slice(0, menuId) + copiedDetail.slice(menuId+1, len) \n            \n        }\n\n        console.log(menuId, len, copiedDetail)\n\n        // console.log(copiedDetail);\n        setMenuDetail(copiedDetail)\n    }\n\n    useEffect(updateMenuDetail, [menuQnty])\n    \n    return (\n        <div className=\"CartMenuItem__\">\n            <div className=\"CartMenuItem__detail\">\n                <p>{menuDetail.name}</p>\n                <br/>\n                <p>{ menuDetail.detail.map((el, i) => (<span key={i}>{el}, </span>))}</p>\n                <p>{new Intl.NumberFormat('ko-KR', { style: 'currency', currency: 'KRW' })\n                .format(menuDetail.price)}</p>\n            </div>\n            <div className=\"CartMenuItem__right\">\n                <button onClick={remove}><CgClose style={{color: \"grey\", fontSize: \"1.5rem\"}}/></button>\n                <div className=\"CartMenuItem__amount\">\n                    <button className=\"CartMenuItem__amount-button\" onClick={decQnty}>-</button>\n                    <span className=\"CartMenuItem__amount-number\">{menuQnty}</span>\n                    <button className=\"CartMenuItem__amount-button\" onClick={incQnty}>+</button>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default CartMenuItem;"]},"metadata":{},"sourceType":"module"}