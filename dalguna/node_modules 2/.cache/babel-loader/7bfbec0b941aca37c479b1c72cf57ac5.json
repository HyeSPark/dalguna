{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/CheckOut.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RoomCard from \"../components/RoomCard\";\nimport staticDB from \"../db/static.json\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, onSnapshot, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport '../checkout.css';\n\nfunction CheckOut() {\n  // const [roomInfo, setRoomInfo] = useState([{\n  //     name: \"잇마이타이\",\n  //     timeLeft: 10,\n  //     loc: \"아름관\",\n  //     deliTime: \"11~20\",\n  //     raised: 23000,\n  //     minOrd: 20000,\n  //   }])\n  const {\n    userId,\n    roomId\n  } = useParams();\n  const [menuItemInfo, setMenuItemInfo] = useState([]); // arr\n\n  const [roomInfo, setRoomInfo] = useState(); // obj from the docID\n\n  const [checkOutList, setCheckOutList] = useState( /*#__PURE__*/React.createElement(React.Fragment, null)); //   const [restInfo, setRestInfo] = useState(); // obj from the static db\n\n  const [roomCard, setRoomCard] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  const [deliInfo, setDeliInfo] = useState({\n    time: \"0~0\",\n    addr: \" \",\n    expDeliTime: \" \",\n    deliFee: 0,\n    orgPrice: \"\"\n  });\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), snapshot => {\n      const tmp = [];\n      snapshot.forEach(doc => {\n        if (doc.id === roomId) {\n          tmp.push(doc.data());\n        }\n      });\n      const roomInfoObj = tmp.map(room => ({\n        'roomId': room.id,\n        'restName': room.restName,\n        'deliInfo': room.deliInfo,\n        'ordStat': room.ordStat,\n        'parti': room.parti\n        /*, 'entime': room.endTime*/\n\n      }))[0];\n      roomInfoObj['rest'] = staticDB.filter(el => String(el.name) === String(roomInfoObj.restName))[0];\n      setRoomInfo(roomInfoObj);\n      console.log(roomInfoObj);\n      setRoomCard( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkOut__roomCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(RoomCard, {\n        roomInfo: roomInfoObj,\n        photo: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })));\n      setMenuItemInfo(roomInfoObj.parti.filter(el => String(el.id) === String(userId))[0].menu);\n      const timeNow = new Date();\n      var timeDeli = new Date();\n      timeDeli.setMinutes(timeNow.getMinutes() + Number(roomInfoObj['rest'].deliInfo.time.split('~')[0]));\n      setDeliInfo({\n        time: roomInfoObj['rest'].deliInfo.time,\n        addr: roomInfoObj.deliInfo.addr,\n        expDeliTime: `${timeDeli.getHours()}:${timeDeli.getMinutes()}`,\n        deliFee: roomInfoObj['rest'].deliInfo.fee / roomInfoObj.parti.length,\n        orgPrice: roomInfoObj.parti.length !== 0 ? `${roomInfoObj['rest'].deliInfo.fee}` : \"\"\n      });\n    });\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n  useEffect(() => {\n    setCheckOutList(menuItemInfo.map((menu, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      style: {\n        listStyle: 'none'\n      },\n      className: \"checkout_list_block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkout_menu_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, menu.name, \" x \", menu.qnty), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkout_menu_price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, menu.price * menu.qnty))));\n  }, [menuItemInfo]); //   const room = roomInfo.map((room) =>\n  //       <a href=\"#\"> <RoomCard roomInfo={room}></RoomCard></a>)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout_title__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Room #2\"), roomCard, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout_info_block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout_info_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"estimated_time_arrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, deliInfo.expDeliTime), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pickup_location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Pick up location\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout_info_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"estimated_time_arrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, deliInfo.time, \" mins\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pickup_location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, deliInfo.addr))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"checkOut__orderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, checkOutList, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"checkOut__deliFee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkout_menu_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"\\uBC30\\uB2EC\\uBE44\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkout_menu_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkout_menu_orgPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 59\n    }\n  }, deliInfo.orgPrice), \" \\u2794 \", new Intl.NumberFormat('ko-KR', {\n    style: 'currency',\n    currency: 'KRW'\n  }).format(deliInfo.deliFee), \" \"))));\n}\n\nexport default CheckOut;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/CheckOut.js"],"names":["React","useState","useEffect","RoomCard","staticDB","useParams","collection","onSnapshot","doc","db","CheckOut","userId","roomId","menuItemInfo","setMenuItemInfo","roomInfo","setRoomInfo","checkOutList","setCheckOutList","roomCard","setRoomCard","deliInfo","setDeliInfo","time","addr","expDeliTime","deliFee","orgPrice","getRooms","snapshot","tmp","forEach","id","push","data","roomInfoObj","map","room","restName","ordStat","parti","filter","el","String","name","console","log","menu","timeNow","Date","timeDeli","setMinutes","getMinutes","Number","split","getHours","fee","length","i","listStyle","qnty","price","Intl","NumberFormat","style","currency","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RoomCard from \"../components/RoomCard\";\n\nimport staticDB from \"../db/static.json\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, onSnapshot, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport '../checkout.css'\n\nfunction CheckOut() {\n\n    // const [roomInfo, setRoomInfo] = useState([{\n    //     name: \"잇마이타이\",\n    //     timeLeft: 10,\n    //     loc: \"아름관\",\n    //     deliTime: \"11~20\",\n    //     raised: 23000,\n    //     minOrd: 20000,\n    //   }])\n\n  const { userId, roomId } = useParams()\n\n  const [menuItemInfo, setMenuItemInfo] = useState([]) // arr\n\n  const [roomInfo, setRoomInfo] = useState(); // obj from the docID\n\n  const [checkOutList, setCheckOutList] = useState(<></>)\n\n//   const [restInfo, setRestInfo] = useState(); // obj from the static db\n\n  const [roomCard, setRoomCard] = useState(<></>)\n\n  const [deliInfo, setDeliInfo] = useState({time:\"0~0\", addr:\" \" , expDeliTime:\" \", deliFee:0, orgPrice:\"\"})\n\n\n  function getRooms() {\n\n    onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n      const tmp = [];\n      snapshot.forEach((doc) => {\n          if (doc.id === roomId) {\n            tmp.push(doc.data())\n          }\n      })\n\n      const roomInfoObj = tmp.map((room) => ({\n        'roomId': room.id, 'restName': room.restName,\n        'deliInfo': room.deliInfo, 'ordStat': room.ordStat,\n        'parti': room.parti /*, 'entime': room.endTime*/\n      }))[0]\n\n      roomInfoObj['rest'] = staticDB.filter((el) => String(el.name) === String(roomInfoObj.restName))[0];\n\n      setRoomInfo(roomInfoObj);\n      console.log(roomInfoObj)\n\n      setRoomCard(<div className=\"checkOut__roomCard\">\n            <RoomCard roomInfo={roomInfoObj} photo={false}></RoomCard>\n        </div>)\n      setMenuItemInfo(roomInfoObj.parti.filter((el) => String(el.id) === String(userId))[0].menu)\n      const timeNow = new Date()\n      var timeDeli = new Date() \n      timeDeli.setMinutes(timeNow.getMinutes() + Number(roomInfoObj['rest'].deliInfo.time.split('~')[0]))\n      setDeliInfo({\n          time: roomInfoObj['rest'].deliInfo.time,\n          addr: roomInfoObj.deliInfo.addr,\n          expDeliTime: `${timeDeli.getHours()}:${timeDeli.getMinutes()}`,\n          deliFee: roomInfoObj['rest'].deliInfo.fee / roomInfoObj.parti.length,\n          orgPrice: roomInfoObj.parti.length !== 0 ? `${roomInfoObj['rest'].deliInfo.fee}` : \"\",\n        })\n      \n    })\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  \n  useEffect(() => {\n      setCheckOutList(menuItemInfo.map((menu, i) => \n            <li key={i} style={{listStyle:'none'}} className = \"checkout_list_block\">\n                <span className=\"checkout_menu_name\">{menu.name} x {menu.qnty}</span>\n                <span className=\"checkout_menu_price\">{menu.price * menu.qnty}</span>\n            </li>))\n    \n  }, [menuItemInfo])\n    //   const room = roomInfo.map((room) =>\n    //       <a href=\"#\"> <RoomCard roomInfo={room}></RoomCard></a>)\n\n\n\n      \n    return (\n        <div className=\"ui-container\">\n            <div className =\"checkout_title__\">\n                Room #2\n            </div>\n            {roomCard}\n            <div className=\"checkout_info_block\">\n                <div className=\"checkout_info_heading\">\n                    <span className=\"estimated_time_arrival\">{deliInfo.expDeliTime}</span>\n                    <span className=\"pickup_location\">Pick up location</span>\n                </div>\n                <br/>\n                <div className=\"checkout_info_content\">\n                    <span className=\"estimated_time_arrival\">{deliInfo.time} mins</span>\n                    <span className=\"pickup_location\">{deliInfo.addr}</span>\n                </div>\n            </div>\n            <br/>\n            <ul className=\"checkOut__orderList\">\n                {checkOutList}\n                <li className=\"checkOut__deliFee\">\n                    <span className=\"checkout_menu_name\">배달비</span>\n                    <span className=\"checkout_menu_price\"><span className=\"checkout_menu_orgPrice\">{deliInfo.orgPrice}</span> ➔ {new Intl.NumberFormat('ko-KR', { style: 'currency', currency: 'KRW' })\n                            .format(deliInfo.deliFee)} </span>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default CheckOut\n"]},"metadata":{},"sourceType":"module"}