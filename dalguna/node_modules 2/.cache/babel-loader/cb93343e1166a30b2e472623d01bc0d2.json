{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { collection, getDocs, doc, query, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport RoomCard from '../components/RoomCard';\nimport CatFilter from './CatFilter';\nimport CatItem from '../components/CatItem';\nimport RestCard from '../components/RestCard.js';\nimport NavBar from '../components/NavBar.js';\nimport TabBar from '../components/TabBar.js';\nimport CartModal from \"../components/CartModal\";\nimport staticDB from \"../db/static.json\";\nimport dhspic from '../img/DHS_photo.jpeg';\nimport \"../main.css\"; // function getDB(restInfo, setRestInfo, roomInfo, setRoomInfo) {\n//   getDocs(collection(db, 'DYNAMIC')).then((snapshot) => {\n//     const tmp = [];\n//     snapshot.forEach((doc) => tmp.push(doc.data()))\n//     setRoomInfo(tmp.map((room) => ({\n//       'restName': room.restName, 'deliLoc': room.deliLoc,\n//       'poolMon': room.poolMon, 'endTime': room.endTime,\n//       'ordStat': room.ordStat, 'participants': room.participants,\n//       'roomId': room.roomID,\n//       'timeLeft': 15\n//     })))\n//   })\n// }\n\nfunction Main() {\n  const restInfo = staticDB;\n  const [roomInfo, setRoomInfo] = useState([]);\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), snapshot => {\n      const tmp = [];\n      snapshot.forEach(doc => tmp.push(doc.data()));\n      setRoomInfo(tmp.map(room => ({\n        'roomId': room.id,\n        'restName': room.restName,\n        'deliInfo': room.deliInfo,\n        'ordStat': room.ordStat,\n        'parti': room.parti\n        /*, 'entime': room.endTime*/\n\n      })));\n    });\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n  const catInfoList = [{\n    name: \"Korean\",\n    img: dhspic\n  }, {\n    name: \"Japanese\",\n    img: dhspic\n  }, {\n    name: \"Snacks\",\n    img: dhspic\n  }, {\n    name: \"Asian\",\n    img: dhspic\n  }, {\n    name: \"Salad\",\n    img: dhspic\n  }, {\n    name: \"Doshirak\",\n    img: dhspic\n  }, {\n    name: \"중국집\",\n    img: dhspic\n  }, {\n    name: \"덮밥\",\n    img: dhspic\n  }];\n\n  for (const room of roomInfo) {\n    room['rest'] = restInfo.filter(rest => rest.name == room.restName)[0];\n  }\n\n  const restList = restInfo.map(rest => /*#__PURE__*/React.createElement(\"li\", {\n    key: rest.name,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `./restaurant/${rest.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(RestCard, {\n    restInfo: rest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 43\n    }\n  })))); // [NOT IMPLEMENTED] key will be changed below (room name is not unique)\n\n  const roomList = roomInfo.map(room => /*#__PURE__*/React.createElement(\"li\", {\n    key: room.roomId,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(RoomCard, {\n    roomInfo: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }))));\n  const catList = catInfoList.map(cat => /*#__PURE__*/React.createElement(\"li\", {\n    key: cat.name,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `./filter/${cat.name}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CatItem, {\n    img: cat.img,\n    name: cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 46\n    }\n  }), \" \")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"105px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Food Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mainPage__cat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, catList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Your Room\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      margin: 0\n    },\n    className: \"mainPage__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, roomList[2]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Room Suggestions\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      margin: 0\n    },\n    className: \"mainPage__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, roomList.slice(0, 2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Restaurant List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      margin: 0\n    },\n    className: \"mainPage__rest-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, restList)));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/Main.js"],"names":["React","useState","useEffect","Link","collection","getDocs","doc","query","onSnapshot","db","RoomCard","CatFilter","CatItem","RestCard","NavBar","TabBar","CartModal","staticDB","dhspic","Main","restInfo","roomInfo","setRoomInfo","getRooms","snapshot","tmp","forEach","push","data","map","room","id","restName","deliInfo","ordStat","parti","catInfoList","name","img","filter","rest","restList","listStyle","roomList","roomId","catList","cat","pathname","height","margin","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { collection, getDocs, doc, query, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport RoomCard from '../components/RoomCard';\nimport CatFilter from './CatFilter';\nimport CatItem from '../components/CatItem';\nimport RestCard from '../components/RestCard.js'\nimport NavBar from '../components/NavBar.js'\nimport TabBar from '../components/TabBar.js'\nimport CartModal from \"../components/CartModal\";\n\nimport staticDB from \"../db/static.json\";\nimport dhspic from '../img/DHS_photo.jpeg';\n\nimport \"../main.css\";\n\n// function getDB(restInfo, setRestInfo, roomInfo, setRoomInfo) {\n//   getDocs(collection(db, 'DYNAMIC')).then((snapshot) => {\n//     const tmp = [];\n//     snapshot.forEach((doc) => tmp.push(doc.data()))\n//     setRoomInfo(tmp.map((room) => ({\n//       'restName': room.restName, 'deliLoc': room.deliLoc,\n//       'poolMon': room.poolMon, 'endTime': room.endTime,\n//       'ordStat': room.ordStat, 'participants': room.participants,\n//       'roomId': room.roomID,\n//       'timeLeft': 15\n//     })))\n//   })\n// }\n\nfunction Main() {\n  const restInfo = staticDB;\n  const [roomInfo, setRoomInfo] = useState([]);\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n      const tmp = [];\n      snapshot.forEach((doc) => tmp.push(doc.data()))\n      setRoomInfo(tmp.map((room) => ({\n        'roomId': room.id, 'restName': room.restName,\n        'deliInfo': room.deliInfo, 'ordStat': room.ordStat,\n        'parti': room.parti /*, 'entime': room.endTime*/\n      })));\n    })\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  const catInfoList = [\n    {name: \"Korean\", img:dhspic}, \n    {name: \"Japanese\", img:dhspic},\n    {name: \"Snacks\", img:dhspic},\n    {name: \"Asian\", img:dhspic},\n    {name: \"Salad\", img:dhspic},\n    {name: \"Doshirak\", img:dhspic},\n    {name: \"중국집\", img:dhspic},\n    {name: \"덮밥\", img:dhspic},\n  ]\n  \n  for (const room of roomInfo) {\n    room['rest'] = restInfo.filter((rest) => rest.name == room.restName)[0];\n  }\n\n  const restList = restInfo.map((rest) => \n  <li key={rest.name} style={{listStyle:'none'}}>\n     <Link to={`./restaurant/${rest.id}`}><RestCard restInfo={rest}></RestCard></Link>\n  </li>)\n\n    // [NOT IMPLEMENTED] key will be changed below (room name is not unique)\n  const roomList = roomInfo.map((room) => \n  <li key={room.roomId} style={{listStyle:'none'}}>\n      <a href=\"#\"> <RoomCard roomInfo={room}></RoomCard></a>\n  </li>\n  )\n\n  const catList = catInfoList.map((cat) => \n      <li key={cat.name} style={{listStyle:'none'}}>\n        <Link to={{\n          pathname:`./filter/${cat.name}`}}> <CatItem img={cat.img} name={cat.name}></CatItem> </Link>\n      </li>\n  )\n\n  return (\n    <div className=\"ui-container\">\n      <div className=\"mainPage__\">\n        <NavBar/>\n        <div style={{height:\"105px\"}}/>\n        <div className = \"mainPage__title\">Food Categories</div>\n        <ul className = \"mainPage__cat-list\">\n            {catList}\n        </ul>\n        <div className = \"mainPage__separation\"/>\n        <div className = \"mainPage__title\">Your Room</div>\n        <ul style={{margin:0}} className = \"mainPage__room-list\">\n            {roomList[2]}\n        </ul>\n        <div className = \"mainPage__separation\"/>\n        <div className = \"mainPage__title\">Room Suggestions</div>\n        <ul style={{margin:0}} className = \"mainPage__room-list\">\n            {roomList.slice(0, 2)}\n        </ul>\n        <div className = \"mainPage__separation\"/>\n        <div className = \"mainPage__title\">Restaurant List</div>\n        <ul style={{margin:0}} className = \"mainPage__rest-card-list\">\n            {restList}\n        </ul>\n        {/* <TabBar/> */}\n      </div>\n    </div>\n      \n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}