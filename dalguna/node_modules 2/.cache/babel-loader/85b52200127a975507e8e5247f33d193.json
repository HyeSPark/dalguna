{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/CatFilter.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../cat_filter.css';\nimport dhspic from '../img/DHS_photo.jpeg';\nimport CatFilterBar from '../components/CatFilterBar';\nimport RestCard from '../components/RestCard';\nimport { useParams, Link } from 'react-router-dom';\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport staticDB from \"../db/static.json\";\n\nfunction CatFilter() {\n  const params = useParams();\n  const catNameList = [\"한식\", \"일식\", \"분식\", \"아시아\", \"샐러드\", \"도시락\", \"중국집\", \"덮밥\"];\n  const [restInfo, setRestInfo] = useState(staticDB);\n  const [roomInfo, setRoomInfo] = useState([]);\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), snapshot => {\n      const tmp = [];\n      snapshot.forEach(doc => tmp.push({\n        room_id: doc.id,\n        room: doc.data()\n      }));\n      setRoomInfo(tmp.map(_ref => {\n        let {\n          room\n        } = _ref;\n        return {\n          'roomId': room.id,\n          'restName': room.restName,\n          'deliInfo': room.deliInfo,\n          'ordStat': room.ordStat,\n          'parti': room.parti,\n          'endTime': room.endTime,\n          'rest': restInfo.filter(rest => rest.name == room.restName)[0],\n          'timeLeft': parseInt((room.endTime.seconds - new Date().getTime() / 1000) / 60),\n          'poolMon': room.parti.reduce((money, part) => money + part.price, 0)\n        };\n      }));\n    });\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n  const [curSelect, setCurSelect] = useState(params.name);\n  var visRestList = restInfo.filter(rest => rest.category == curSelect);\n  const restList = visRestList.map(rest => /*#__PURE__*/React.createElement(\"li\", {\n    key: rest.name,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `../${params.userId}/restaurant/${rest.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RestCard, {\n    restInfo: rest,\n    roomInfo: roomInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 62\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CatFilter__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CatFilterBar, {\n    catNameList: catNameList,\n    cur: curSelect,\n    setCur: setCurSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"CatFilter__restList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, restList, /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      marginBottom: \"15px\",\n      fontSize: \"0.8rem\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"\\uCC3E\\uC73C\\uC2DC\\uB294 \\uC74C\\uC2DD\\uC810\\uC774 \\uC5C6\\uB098\\uC694? \\uC81C\\uC791\\uC790\\uC5D0\\uAC8C \\uC54C\\uB824\\uC8FC\\uC138\\uC694\"))));\n}\n\nexport default CatFilter;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/CatFilter.js"],"names":["React","useState","useEffect","dhspic","CatFilterBar","RestCard","useParams","Link","collection","onSnapshot","db","staticDB","CatFilter","params","catNameList","restInfo","setRestInfo","roomInfo","setRoomInfo","getRooms","snapshot","tmp","forEach","doc","push","room_id","id","room","data","map","restName","deliInfo","ordStat","parti","endTime","filter","rest","name","parseInt","seconds","Date","getTime","reduce","money","part","price","curSelect","setCurSelect","visRestList","category","restList","listStyle","userId","marginBottom","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../cat_filter.css';\nimport dhspic from '../img/DHS_photo.jpeg';\nimport CatFilterBar from '../components/CatFilterBar';\nimport RestCard from '../components/RestCard';\n\nimport { useParams, Link } from 'react-router-dom';\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport staticDB from \"../db/static.json\";\n\nfunction CatFilter() {\n    const params = useParams();\n\n    const catNameList = [\"한식\", \"일식\", \"분식\", \"아시아\", \"샐러드\", \"도시락\", \"중국집\", \"덮밥\"]\n\n    const [restInfo, setRestInfo] = useState(staticDB)\n    const [roomInfo, setRoomInfo] = useState([]);\n\n    function getRooms() {\n        onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n          const tmp = [];\n          snapshot.forEach((doc) => tmp.push({room_id: doc.id, room: doc.data()}))\n          setRoomInfo(tmp.map(({room}) => ({\n              'roomId': room.id, 'restName': room.restName,\n              'deliInfo': room.deliInfo, 'ordStat': room.ordStat,\n              'parti': room.parti, 'endTime': room.endTime,\n              'rest': restInfo.filter((rest) => rest.name == room.restName)[0],\n              'timeLeft': parseInt((room.endTime.seconds - new Date().getTime() / 1000) / 60),\n              'poolMon': room.parti.reduce((money, part) => money + part.price, 0)\n            })));\n        })\n      }\n    \n      useEffect(() => {\n        getRooms();\n      }, []);\n    \n    const [curSelect, setCurSelect] = useState(params.name)\n    var visRestList = restInfo.filter((rest) => rest.category==curSelect)\n    const restList = visRestList.map((rest) => \n    <li key={rest.name} style={{listStyle:'none'}}>\n      <Link to={`../${params.userId}/restaurant/${rest.id}`}><RestCard restInfo={rest} roomInfo={roomInfo}></RestCard></Link>\n    </li>\n    )\n    return (\n        <div className=\"ui-container\">\n            <div className=\"CatFilter__\">\n                <CatFilterBar catNameList={catNameList} cur={curSelect} setCur={setCurSelect}/>\n                <ul className=\"CatFilter__restList\">\n                    {restList}\n                    <li style={{marginBottom:\"15px\", fontSize:\"0.8rem\", color:\"grey\"}}>\n                        찾으시는 음식점이 없나요? 제작자에게 알려주세요\n                    </li>\n                </ul>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default CatFilter"]},"metadata":{},"sourceType":"module"}