{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CgClose } from 'react-icons/cg';\nimport CartMenuItem from \"./CartMenuItem\";\nimport RoomCard from \"./RoomCard\";\nimport LongButton from \"./LongButton\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { collection, onSnapshot, getDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport NewRoomModal from \"./NewRoomModal\";\nimport \"../cart_modal.css\";\n\nfunction CartModal(props) {\n  const params = useParams();\n  const navigate = useNavigate();\n  const {\n    restName,\n    menuList,\n    setMenuList,\n    setModal,\n    roomList,\n    roomInfo,\n    roomIdUserJoining,\n    deliAddr\n  } = props;\n  const roomLength = roomInfo.length; // const createButtonClassName = { true: \"\" ,\n  //         false: \"cartModal__createHide\" }\n\n  const [createButton, setCreateButton] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  const [roomListClickable, setRoomListClickable] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  const [updatedRealMenuList, setUpdatedRealMenuList] = useState(menuList);\n  useEffect(() => {\n    if (roomIdUserJoining === \"\") {\n      setCreateButton( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"CartModal__create-room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"grey\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"\\uC6D0\\uD558\\uB294 \\uBC29\\uC744 \\uCC3E\\uC9C0 \\uBABB\\uD558\\uC168\\uB098\\uC694?\"), /*#__PURE__*/React.createElement(LongButton, {\n        onClick: openNewRoomModal,\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, \"\\uC0C8\\uB85C\\uC6B4 \\uBC29 \\uB9CC\\uB4E4\\uAE30\")));\n    } else {\n      setCreateButton( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"CartModal__create-room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"grey\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, \"\\uC120\\uD0DD\\uD55C \\uBC29\\uC5D0\\uC11C \\uAC19\\uC774 \\uC8FC\\uBB38\\uD560\\uAE4C\\uC694?\"), /*#__PURE__*/React.createElement(LongButton, {\n        onClick: () => enterExistingRoom(roomIdUserJoining),\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"\\uBAA8\\uC784\\uC5D0 \\uD569\\uB958\\uD558\\uAE30\")));\n    }\n  }, [roomIdUserJoining]);\n  useEffect(updateRoomListClickable, [roomInfo]);\n\n  function updateRoomListClickable() {\n    setRoomListClickable(roomInfo.filter(room => room.restName == restName).map((room, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      style: {\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => enterExistingRoom(room.roomId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RoomCard, {\n      roomInfo: room,\n      photo: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 66\n      }\n    })))));\n\n    if (roomInfo.filter(room => room.restName == restName).length === 0) {\n      setRoomListClickable( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }\n      }, \"\\uB9CC\\uB4E4\\uC5B4\\uC9C4 \\uBC29\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"));\n    }\n  }\n\n  const [menuVisible, setMenuVisible] = useState(menuList.map((menu, i) => /*#__PURE__*/React.createElement(CartMenuItem, {\n    key: i,\n    menuDetail: menu,\n    setMenuDetail: setMenuList,\n    menuList: menuList,\n    menuId: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })));\n\n  function goBack() {\n    setModal( /*#__PURE__*/React.createElement(React.Fragment, null));\n  }\n\n  useEffect(updateCartMenu, [menuList]);\n\n  function updateCartMenu() {\n    console.log(params.userId, menuList);\n    setUpdatedRealMenuList(menuList);\n    var copied = [...menuList];\n    setMenuVisible(copied.map((menu, i) => /*#__PURE__*/React.createElement(CartMenuItem, {\n      key: i,\n      menuDetail: menu,\n      setMenuDetail: setMenuList,\n      menuList: menuList,\n      menuId: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    })));\n\n    if (menuList.length === 0) {\n      setCreateButton( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"CartModal__create-room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"grey\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"\\uCE74\\uD2B8\\uAC00 \\uBE44\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.\"), /*#__PURE__*/React.createElement(LongButton, {\n        type: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"\\uC8FC\\uBB38\\uD558\\uAE30\")));\n    }\n  }\n\n  const [newRoomModal, setNewRoomModal] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n\n  function openNewRoomModal() {\n    console.log(menuList);\n    setNewRoomModal( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-modal-container\",\n      onClick: closeNewRoomModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NewRoomModal, {\n      restName: restName,\n      menuList: menuList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 90\n      }\n    })));\n  }\n\n  const closeNewRoomModal = e => {\n    var contactHeight = e.clientY;\n    var windowHeight = window.innerHeight;\n\n    if (windowHeight - contactHeight > 255) {\n      setNewRoomModal( /*#__PURE__*/React.createElement(React.Fragment, null));\n    }\n  };\n\n  function enterExistingRoom(roomId) {\n    console.log(updatedRealMenuList);\n\n    if (updatedRealMenuList.length !== 0) {\n      if (window.confirm(\"주문할까요?\")) {\n        if (menuList.length === 0) {\n          window.alert(\"카트가 비어있습니다.\");\n        } else {\n          getDoc(doc(db, \"rooms\", roomId)).then(room => {\n            const {\n              parti\n            } = room.data();\n            const updatedParti = [...parti, {\n              \"id\": params.userId,\n              \"menu\": menuList,\n              \"ordNow\": false,\n              \"price\": menuList.reduce((price, menu) => price + menu.price * menu.qnty, 0)\n            }];\n            updateDoc(doc(db, \"rooms\", roomId), {\n              parti: updatedParti\n            });\n            navigate(`../${params.userId}`);\n          });\n        }\n      }\n    } else {\n      window.alert(\"카트가 비어있습니다.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__\",\n    style: {\n      backgroundColor: \"white\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goBack,\n    className: \"CartModal__bar-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CgClose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 75\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"CartModal__bar-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 22\n    }\n  }, \"Delivery to \"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 47\n    }\n  }, deliAddr)), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"CartModal__address-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__restmenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, restName), menuVisible, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"CartModal__restmenu-add\",\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"+ Add More Menu\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartModal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Rooms Available\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 0\n    },\n    className: \"CartModal__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, roomLength !== 0 ? roomListClickable : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 61\n    }\n  }, \" \\uD604\\uC7AC \\uAC00\\uB2A5\\uD55C \\uBC29\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), createButton, newRoomModal);\n}\n\nexport default CartModal;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/components/CartModal.js"],"names":["React","useState","useEffect","CgClose","CartMenuItem","RoomCard","LongButton","useParams","useNavigate","collection","onSnapshot","getDoc","updateDoc","doc","db","NewRoomModal","CartModal","props","params","navigate","restName","menuList","setMenuList","setModal","roomList","roomInfo","roomIdUserJoining","deliAddr","roomLength","length","createButton","setCreateButton","roomListClickable","setRoomListClickable","updatedRealMenuList","setUpdatedRealMenuList","color","fontSize","fontWeight","openNewRoomModal","enterExistingRoom","updateRoomListClickable","filter","room","map","i","listStyle","roomId","menuVisible","setMenuVisible","menu","goBack","updateCartMenu","console","log","userId","copied","newRoomModal","setNewRoomModal","closeNewRoomModal","e","contactHeight","clientY","windowHeight","window","innerHeight","confirm","alert","then","parti","data","updatedParti","reduce","price","qnty","backgroundColor","height","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { CgClose } from 'react-icons/cg';\nimport CartMenuItem from \"./CartMenuItem\";\nimport RoomCard from \"./RoomCard\";\nimport LongButton from \"./LongButton\";\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport { collection, onSnapshot, getDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport NewRoomModal from \"./NewRoomModal\"\n\nimport \"../cart_modal.css\"\n\nfunction CartModal(props) {\n    const params = useParams()\n    const navigate = useNavigate()\n    \n    const { restName, menuList, setMenuList, setModal, roomList, roomInfo, roomIdUserJoining, deliAddr } = props\n    const roomLength = roomInfo.length\n    \n    // const createButtonClassName = { true: \"\" ,\n    //         false: \"cartModal__createHide\" }\n\n    const [createButton, setCreateButton] = useState(<></>)\n\n    const [roomListClickable, setRoomListClickable] = useState(<></>)\n\n    const [updatedRealMenuList, setUpdatedRealMenuList] = useState(menuList)\n\n    useEffect(()=> {\n        if (roomIdUserJoining === \"\") {\n            setCreateButton(<div className=\"CartModal__create-room\">\n                <span style={{color:\"grey\", fontSize:\"0.9rem\", fontWeight:\"bold\"}}>원하는 방을 찾지 못하셨나요?</span>\n                <LongButton onClick={openNewRoomModal} type=\"primary\">새로운 방 만들기</LongButton>\n            </div>)\n        } else {\n            setCreateButton(<div className=\"CartModal__create-room\">\n                <span style={{color:\"grey\", fontSize:\"0.9rem\", fontWeight:\"bold\"}}>선택한 방에서 같이 주문할까요?</span>\n                <LongButton onClick={() => enterExistingRoom(roomIdUserJoining)} type=\"primary\">모임에 합류하기</LongButton>\n            </div>)\n        }\n\n    }, [roomIdUserJoining])\n\n    useEffect(updateRoomListClickable, [roomInfo]);\n    function updateRoomListClickable() {\n        setRoomListClickable(roomInfo.filter((room) => room.restName==restName)\n        .map((room, i) => \n        <li key={i} style={{listStyle:'none'}}>\n            <div onClick={() => enterExistingRoom(room.roomId)}> <RoomCard roomInfo={room} photo={true}></RoomCard></div>\n        </li>))\n\n        if (roomInfo.filter((room) => room.restName==restName).length === 0) {\n            setRoomListClickable(<p>만들어진 방이 없습니다.</p>)\n        }\n    }\n    \n\n    const [menuVisible, setMenuVisible] \n        = useState(menuList.map((menu, i) => \n            <CartMenuItem key={i} menuDetail={menu} setMenuDetail={setMenuList} menuList={menuList} menuId={i}/>))\n    \n    function goBack() {\n        setModal(<></>)\n    }\n\n    useEffect(updateCartMenu, [menuList]) \n    \n    function updateCartMenu() {\n        console.log(params.userId, menuList)\n        setUpdatedRealMenuList(menuList);\n        var copied = [...menuList]\n           \n        setMenuVisible(copied.map((menu, i) =>\n                <CartMenuItem key={i} menuDetail={menu} setMenuDetail={setMenuList} menuList={menuList} menuId={i}/>))\n        \n                if (menuList.length === 0) {\n            setCreateButton(<div className=\"CartModal__create-room\">\n                <span style={{color:\"grey\", fontSize:\"0.9rem\", fontWeight:\"bold\"}}>카트가 비어있습니다.</span>\n                <LongButton type=\"secondary\">주문하기</LongButton>\n            </div>)\n        }\n    }\n\n    const [newRoomModal, setNewRoomModal] = useState(<></>)\n\n    function openNewRoomModal() {\n        console.log(menuList)\n        setNewRoomModal(<div className=\"new-modal-container\" onClick={closeNewRoomModal}><NewRoomModal restName={restName} menuList={menuList}/></div>)\n    }\n\n    const closeNewRoomModal = (e) => {\n        var contactHeight = e.clientY;\n        var windowHeight = window.innerHeight;\n        if (windowHeight - contactHeight > 255) {\n            setNewRoomModal(<></>)\n        }\n    }\n\n    function enterExistingRoom(roomId) {\n        console.log(updatedRealMenuList)\n        if (updatedRealMenuList.length !== 0) {\n            if (window.confirm(\"주문할까요?\") ) {\n                if (menuList.length === 0) {\n                    window.alert(\"카트가 비어있습니다.\")\n                } else {\n                    getDoc(doc(db, \"rooms\", roomId)).then((room) => {\n                        const { parti } = room.data();\n                        const updatedParti = [...parti, {\n                            \"id\": params.userId,\n                            \"menu\": menuList, \n                            \"ordNow\": false,\n                            \"price\": menuList.reduce((price, menu) => price + menu.price * menu.qnty, 0)\n                        }]\n                        updateDoc(doc(db, \"rooms\", roomId), {\n                            parti: updatedParti,\n                        })\n                        navigate(`../${params.userId}`)\n                    }\n                    )\n                }\n            }\n        } else {\n            window.alert(\"카트가 비어있습니다.\")\n        }\n    } \n\n\n    return (\n        <div className=\"CartModal__\" style={{backgroundColor:\"white\", height:\"100%\"}}>\n            <div className=\"CartModal__bar\">\n                <button onClick={goBack} className=\"CartModal__bar-close\"><CgClose></CgClose></button>\n                <span className=\"CartModal__bar-cart\">Cart</span>\n            </div>\n            <div className=\"CartModal__address\">\n                <div><span>Delivery to </span><span style={{fontWeight:\"bold\"}}>{deliAddr}</span></div>\n                <a href=\"#\" className=\"CartModal__address-edit\">Edit</a>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            <div className=\"CartModal__restmenu\">\n                <div className=\"CartModal__title\">{restName}</div>\n                { menuVisible }\n                <button className=\"CartModal__restmenu-add\" onClick={goBack}>+ Add More Menu</button>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            {/* <div className=\"CartModal__request\">\n            </div>\n            <div className = \"mainPage__separation\"/> */}\n            <div className =\"CartModal__room\">\n                <div className=\"CartModal__title\">\n                    Rooms Available\n                </div>\n                <ul style={{padding:0}} className = \"CartModal__room-list\">\n                    {roomLength !== 0 ? roomListClickable : <p style={{color:\"grey\"}}> 현재 가능한 방이 없습니다. </p> }\n                </ul>\n            </div>\n            <div className = \"mainPage__separation\"/>\n            {createButton}\n            {newRoomModal}\n        </div>\n    )\n}\n\nexport default CartModal;"]},"metadata":{},"sourceType":"module"}