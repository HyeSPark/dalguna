{"ast":null,"code":"import _slicedToArray from\"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'../cat_filter.css';import dhspic from'../img/DHS_photo.jpeg';import CatFilterBar from'../components/CatFilterBar';import RestCard from'../components/RestCard';import{useParams,Link}from'react-router-dom';import staticDB from\"../db/static.json\";function CatFilter(){var params=useParams();var catNameList=[\"Korean\",\"Chicken\",\"Japanese\",\"Snacks\",\"Asian\",\"Salad\",\"Doshirak\",\"중국집\",\"덮밥\"];var _useState=useState(staticDB),_useState2=_slicedToArray(_useState,2),restInfo=_useState2[0],setRestInfo=_useState2[1];var _useState3=useState(params.name),_useState4=_slicedToArray(_useState3,2),curSelect=_useState4[0],setCurSelect=_useState4[1];var visRestList=restInfo.filter(function(rest){return rest.category==curSelect;});var restList=visRestList.map(function(rest){return/*#__PURE__*/React.createElement(\"li\",{key:rest.name,style:{listStyle:'none'}},/*#__PURE__*/React.createElement(Link,{to:\"../\".concat(params.userId,\"/restaurant/\").concat(rest.id)},/*#__PURE__*/React.createElement(RestCard,{restInfo:rest})));});return/*#__PURE__*/React.createElement(\"div\",{className:\"ui-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CatFilter__\"},/*#__PURE__*/React.createElement(CatFilterBar,{catNameList:catNameList,cur:curSelect,setCur:setCurSelect}),/*#__PURE__*/React.createElement(\"ul\",{className:\"CatFilter__restList\"},restList,/*#__PURE__*/React.createElement(\"li\",{style:{marginBottom:\"15px\",fontSize:\"0.8rem\",color:\"grey\"}},\"\\uCC3E\\uC73C\\uC2DC\\uB294 \\uC74C\\uC2DD\\uC810\\uC774 \\uC5C6\\uB098\\uC694? \\uC81C\\uC791\\uC790\\uC5D0\\uAC8C \\uC54C\\uB824\\uC8FC\\uC138\\uC694\"))));}export default CatFilter;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/CatFilter.js"],"names":["React","useState","dhspic","CatFilterBar","RestCard","useParams","Link","staticDB","CatFilter","params","catNameList","restInfo","setRestInfo","name","curSelect","setCurSelect","visRestList","filter","rest","category","restList","map","listStyle","userId","id","marginBottom","fontSize","color"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,SAAT,CAAoBC,IAApB,KAAgC,kBAAhC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CAEA,QAASC,CAAAA,SAAT,EAAqB,CACjB,GAAMC,CAAAA,MAAM,CAAGJ,SAAS,EAAxB,CAEA,GAAMK,CAAAA,WAAW,CAAG,CAAC,QAAD,CAAW,SAAX,CAAsB,UAAtB,CAAkC,QAAlC,CAA4C,OAA5C,CAAqD,OAArD,CAA8D,UAA9D,CAA0E,KAA1E,CAAiF,IAAjF,CAApB,CAEA,cACET,QAAQ,CAACM,QAAD,CADV,wCAAOI,QAAP,eAAiBC,WAAjB,eAGA,eAAkCX,QAAQ,CAACQ,MAAM,CAACI,IAAR,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eACA,GAAIC,CAAAA,WAAW,CAAGL,QAAQ,CAACM,MAAT,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,QAAL,EAAeL,SAAzB,EAAhB,CAAlB,CACA,GAAMM,CAAAA,QAAQ,CAAGJ,WAAW,CAACK,GAAZ,CAAgB,SAACH,IAAD,qBACjC,0BAAI,GAAG,CAAEA,IAAI,CAACL,IAAd,CAAoB,KAAK,CAAE,CAACS,SAAS,CAAC,MAAX,CAA3B,eACE,oBAAC,IAAD,EAAM,EAAE,cAAQb,MAAM,CAACc,MAAf,wBAAoCL,IAAI,CAACM,EAAzC,CAAR,eAAuD,oBAAC,QAAD,EAAU,QAAQ,CAAEN,IAApB,EAAvD,CADF,CADiC,EAAhB,CAAjB,CAKA,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,aAAf,eACI,oBAAC,YAAD,EAAc,WAAW,CAAER,WAA3B,CAAwC,GAAG,CAAEI,SAA7C,CAAwD,MAAM,CAAEC,YAAhE,EADJ,cAEI,0BAAI,SAAS,CAAC,qBAAd,EACKK,QADL,cAEI,0BAAI,KAAK,CAAE,CAACK,YAAY,CAAC,MAAd,CAAsBC,QAAQ,CAAC,QAA/B,CAAyCC,KAAK,CAAC,MAA/C,CAAX,wIAFJ,CAFJ,CADJ,CADJ,CAcH,CAED,cAAenB,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport '../cat_filter.css';\nimport dhspic from '../img/DHS_photo.jpeg';\nimport CatFilterBar from '../components/CatFilterBar';\nimport RestCard from '../components/RestCard';\nimport { useParams, Link } from 'react-router-dom';\n\nimport staticDB from \"../db/static.json\";\n\nfunction CatFilter() {\n    const params = useParams();\n\n    const catNameList = [\"Korean\", \"Chicken\", \"Japanese\", \"Snacks\", \"Asian\", \"Salad\", \"Doshirak\", \"중국집\", \"덮밥\"]\n\n    const [restInfo, setRestInfo] \n    = useState(staticDB)\n    \n    const [curSelect, setCurSelect] = useState(params.name)\n    var visRestList = restInfo.filter((rest) => rest.category==curSelect)\n    const restList = visRestList.map((rest) => \n    <li key={rest.name} style={{listStyle:'none'}}>\n      <Link to={`../${params.userId}/restaurant/${rest.id}`}><RestCard restInfo={rest}></RestCard></Link>\n    </li>\n    )\n    return (\n        <div className=\"ui-container\">\n            <div className=\"CatFilter__\">\n                <CatFilterBar catNameList={catNameList} cur={curSelect} setCur={setCurSelect}/>\n                <ul className=\"CatFilter__restList\">\n                    {restList}\n                    <li style={{marginBottom:\"15px\", fontSize:\"0.8rem\", color:\"grey\"}}>\n                        찾으시는 음식점이 없나요? 제작자에게 알려주세요\n                    </li>\n                </ul>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default CatFilter"]},"metadata":{},"sourceType":"module"}