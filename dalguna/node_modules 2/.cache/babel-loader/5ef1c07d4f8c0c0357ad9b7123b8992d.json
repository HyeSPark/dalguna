{"ast":null,"code":"var _jsxFileName = \"/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\nimport RoomCard from '../components/RoomCard';\nimport CatFilter from './CatFilter';\nimport CatItem from '../components/CatItem';\nimport RestCard from '../components/RestCard.js';\nimport NavBar from '../components/NavBar.js';\nimport TabBar from '../components/TabBar.js';\nimport CartModal from \"../components/CartModal\";\nimport staticDB from \"../db/static.json\";\nimport dhspic from '../img/DHS_photo.jpeg';\nimport \"../main.css\"; // function getDB(restInfo, setRestInfo, roomInfo, setRoomInfo) {\n//   getDocs(collection(db, 'DYNAMIC')).then((snapshot) => {\n//     const tmp = [];\n//     snapshot.forEach((doc) => tmp.push(doc.data()))\n//     setRoomInfo(tmp.map((room) => ({\n//       'restName': room.restName, 'deliLoc': room.deliLoc,\n//       'poolMon': room.poolMon, 'endTime': room.endTime,\n//       'ordStat': room.ordStat, 'participants': room.participants,\n//       'roomId': room.roomID,\n//       'timeLeft': 15\n//     })))\n//   })\n// }\n\nfunction Main() {\n  const restInfo = staticDB;\n  const [roomInfo, setRoomInfo] = useState([]);\n  const [myRoomCard, setMyRoomCard] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  const [otherRoomList, setOtherRoomList] = useState( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Restaurant List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      margin: 0\n    },\n    className: \"mainPage__rest-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, restList)));\n  const {\n    userId\n  } = useParams();\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), snapshot => {\n      const tmp = [];\n      snapshot.forEach(doc => tmp.push({\n        room_id: doc.id,\n        room: doc.data()\n      }));\n      setRoomInfo(tmp.map(_ref => {\n        let {\n          room,\n          room_id\n        } = _ref;\n        const roomInfoObj = {\n          'roomId': room.id,\n          'restName': room.restName,\n          'deliInfo': room.deliInfo,\n          'ordStat': room.ordStat,\n          'parti': room.parti\n          /*, 'entime': room.endTime*/\n          ,\n          'rest': restInfo.filter(rest => rest.name == room.restName)[0]\n        };\n\n        if (room.parti.filter(el => el.id === userId).length !== 0) {\n          setMyRoomCard( /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: `./${room_id}`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }\n          }, \" \", /*#__PURE__*/React.createElement(RoomCard, {\n            roomInfo: roomInfoObj,\n            photo: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 63\n            }\n          })));\n          setOtherRoomList( /*#__PURE__*/React.createElement(React.Fragment, null));\n        }\n\n        return roomInfoObj;\n      }));\n    });\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n  const catInfoList = [{\n    name: \"Korean\",\n    img: dhspic\n  }, {\n    name: \"Japanese\",\n    img: dhspic\n  }, {\n    name: \"Snacks\",\n    img: dhspic\n  }, {\n    name: \"Asian\",\n    img: dhspic\n  }, {\n    name: \"Salad\",\n    img: dhspic\n  }, {\n    name: \"Doshirak\",\n    img: dhspic\n  }, {\n    name: \"중국집\",\n    img: dhspic\n  }, {\n    name: \"덮밥\",\n    img: dhspic\n  }]; // [Not Solved] 근데 my room 이 생긴 상태의 사람은 suggestion 없애야할듯\n  // for (const room of roomInfo) {\n  //   room['rest'] = restInfo.filter((rest) => rest.name == room.restName)[0];\n  // }\n\n  const restList = restInfo.map((rest, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `./restaurant/${rest.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(RestCard, {\n    restInfo: rest,\n    roomInfo: roomInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 43\n    }\n  })))); // [IMPLEMENTED] key will be changed below (room name is not unique)\n\n  const roomList = roomInfo.map((room, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(RoomCard, {\n    roomInfo: room,\n    photo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }\n  }))));\n  const catList = catInfoList.map((cat, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `./filter/${cat.name}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CatItem, {\n    img: cat.img,\n    name: cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 46\n    }\n  }), \" \")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"105px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Food Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mainPage__cat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, catList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Your Room\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, myRoomCard), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainPage__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Room Suggestions\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      margin: 0\n    },\n    className: \"mainPage__room-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, roomList.slice(0, 2)), otherRoomList));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/HS/Documents/GitHub/dalguna/dalguna/dalguna/src/pages/Main.js"],"names":["React","useState","useEffect","Link","useParams","collection","onSnapshot","db","RoomCard","CatFilter","CatItem","RestCard","NavBar","TabBar","CartModal","staticDB","dhspic","Main","restInfo","roomInfo","setRoomInfo","myRoomCard","setMyRoomCard","otherRoomList","setOtherRoomList","margin","restList","userId","getRooms","snapshot","tmp","forEach","doc","push","room_id","id","room","data","map","roomInfoObj","restName","deliInfo","ordStat","parti","filter","rest","name","el","length","pathname","catInfoList","img","i","listStyle","roomList","catList","cat","height","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase-config.js\";\n\nimport RoomCard from '../components/RoomCard';\nimport CatFilter from './CatFilter';\nimport CatItem from '../components/CatItem';\nimport RestCard from '../components/RestCard.js'\nimport NavBar from '../components/NavBar.js'\nimport TabBar from '../components/TabBar.js'\nimport CartModal from \"../components/CartModal\";\n\nimport staticDB from \"../db/static.json\";\nimport dhspic from '../img/DHS_photo.jpeg';\n\nimport \"../main.css\";\n\n// function getDB(restInfo, setRestInfo, roomInfo, setRoomInfo) {\n//   getDocs(collection(db, 'DYNAMIC')).then((snapshot) => {\n//     const tmp = [];\n//     snapshot.forEach((doc) => tmp.push(doc.data()))\n//     setRoomInfo(tmp.map((room) => ({\n//       'restName': room.restName, 'deliLoc': room.deliLoc,\n//       'poolMon': room.poolMon, 'endTime': room.endTime,\n//       'ordStat': room.ordStat, 'participants': room.participants,\n//       'roomId': room.roomID,\n//       'timeLeft': 15\n//     })))\n//   })\n// }\n\nfunction Main() {\n  const restInfo = staticDB;\n\n  const [roomInfo, setRoomInfo] = useState([]);\n  const [myRoomCard, setMyRoomCard] = useState(<></>);\n  const [otherRoomList, setOtherRoomList] = useState(<>\n    <div className = \"mainPage__separation\"/>\n    <div className = \"mainPage__title\">Restaurant List</div>\n    <ul style={{margin:0}} className = \"mainPage__rest-card-list\">\n        {restList}\n    </ul></>);\n  \n  const { userId } = useParams();\n\n  function getRooms() {\n    onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n      const tmp = [];\n      snapshot.forEach((doc) => tmp.push({room_id: doc.id, room: doc.data()}))\n      setRoomInfo(tmp.map(({room, room_id}) => {\n        const roomInfoObj = {\n          'roomId': room.id, 'restName': room.restName,\n          'deliInfo': room.deliInfo, 'ordStat': room.ordStat,\n          'parti': room.parti /*, 'entime': room.endTime*/,\n          'rest': restInfo.filter((rest) => rest.name == room.restName)[0],\n        }\n        \n        if (room.parti.filter((el) => el.id === userId).length !== 0) {\n          setMyRoomCard(<Link to={{pathname:`./${room_id}`}}> <RoomCard roomInfo={roomInfoObj} photo={true}></RoomCard></Link>)\n          setOtherRoomList(<></>)\n        }\n\n        return roomInfoObj }));\n\n    })\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  const catInfoList = [\n    {name: \"Korean\", img:dhspic}, \n    {name: \"Japanese\", img:dhspic},\n    {name: \"Snacks\", img:dhspic},\n    {name: \"Asian\", img:dhspic},\n    {name: \"Salad\", img:dhspic},\n    {name: \"Doshirak\", img:dhspic},\n    {name: \"중국집\", img:dhspic},\n    {name: \"덮밥\", img:dhspic},\n  ]\n  \n  // [Not Solved] 근데 my room 이 생긴 상태의 사람은 suggestion 없애야할듯\n  // for (const room of roomInfo) {\n  //   room['rest'] = restInfo.filter((rest) => rest.name == room.restName)[0];\n  // }\n\n  const restList = restInfo.map((rest, i) => \n  <li key={i} style={{listStyle:'none'}}>\n     <Link to={`./restaurant/${rest.id}`}><RestCard restInfo={rest} roomInfo={roomInfo}></RestCard></Link>\n  </li>)\n\n    // [IMPLEMENTED] key will be changed below (room name is not unique)\n  const roomList = roomInfo.map((room, i) => \n  <li key={i} style={{listStyle:'none'}}>\n      <a href=\"#\"> <RoomCard roomInfo={room} photo={true}></RoomCard></a>\n  </li>\n  )\n\n  const catList = catInfoList.map((cat, i) => \n      <li key={i} style={{listStyle:'none'}}>\n        <Link to={{\n          pathname:`./filter/${cat.name}`}}> <CatItem img={cat.img} name={cat.name}></CatItem> </Link>\n      </li>\n  )\n\n  return (\n    <div className=\"ui-container\">\n      <div className=\"mainPage__\">\n        <NavBar/>\n        <div style={{height:\"105px\"}}/>\n        <div className = \"mainPage__title\">Food Categories</div>\n        <ul className = \"mainPage__cat-list\">\n            {catList}\n        </ul>\n        <div className = \"mainPage__separation\"/>\n        <div className = \"mainPage__title\">Your Room</div>\n        <div className = \"mainPage__room-list\">\n            {/* {roomList[2]} */}\n            {myRoomCard}\n        </div>\n        <div className = \"mainPage__separation\"/>\n        <div className = \"mainPage__title\">Room Suggestions</div>\n        <ul style={{margin:0}} className = \"mainPage__room-list\">\n            {roomList.slice(0, 2)}\n        </ul>\n        {otherRoomList}\n        {/* <TabBar/> */}\n      </div>\n    </div>\n      \n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}